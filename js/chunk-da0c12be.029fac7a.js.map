{"version":3,"sources":["webpack:///./src/views/Meme.vue?f87c","webpack:///./src/views/Meme.vue","webpack:///./src/views/Meme.vue?8683","webpack:///./node_modules/graphql/jsutils/isObjectLike.mjs","webpack:///./node_modules/graphql/language/location.mjs","webpack:///./node_modules/graphql/language/printLocation.mjs","webpack:///./node_modules/graphql/error/GraphQLError.mjs","webpack:///./node_modules/graphql/error/syntaxError.mjs","webpack:///./node_modules/graphql/language/kinds.mjs","webpack:///./node_modules/graphql/language/tokenKind.mjs","webpack:///./node_modules/graphql/language/directiveLocation.mjs","webpack:///./node_modules/graphql/language/lexer.mjs","webpack:///./node_modules/graphql/language/parser.mjs","webpack:///./node_modules/graphql-tag/lib/index.js"],"names":["_hoisted_1","class","_hoisted_2","key","_hoisted_3","_createElementVNode","role","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","loading","_Fragment","_renderList","memes","meme","id","href","imageUrl","target","rel","src","alt","keywords","keyword","index","_toDisplayString","defineComponent","setup","result","useQuery","gql","useResult","data","Memes","__exports__","_typeof","obj","Symbol","iterator","constructor","prototype","isObjectLike","value","getLocation","source","position","match","lineRegexp","line","column","exec","body","length","printLocation","location","printSourceLocation","start","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","name","lines","split","locationLine","subLineIndex","Math","floor","subLineColumnNum","subLines","i","push","slice","printPrefixedLines","map","subLine","existingLines","filter","_ref","undefined","padLen","max","apply","_ref2","prefix","_ref3","leftPad","join","len","Array","str","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","_setPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","_getPrototypeOf","NewTarget","this","Reflect","construct","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","Map","_isNativeFunction","has","get","set","Wrapper","_construct","Parent","args","a","Function","bind","sham","Proxy","Date","toString","e","fn","indexOf","o","p","setPrototypeOf","__proto__","getPrototypeOf","_Error","GraphQLError","_super","message","nodes","positions","path","originalError","extensions","_nodeLocations","_nodeLocations2","_nodeLocations3","_this","undefinedIfEmpty","isArray","nodeLocations","_i2","_this$nodes","_ref4","loc","locations","pos","originalExtensions","stack","Error","captureStackTrace","printError","array","error","output","_i4","_error$nodes2","node","_i6","_error$locations2","syntaxError","description","Kind","freeze","NAME","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","INT","FLOAT","STRING","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","BLOCK_STRING","COMMENT","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","Lexer","startOfFileToken","lastToken","token","lineStart","_proto","advance","lookahead","kind","_token$next","next","readToken","isPunctuatorTokenKind","printCharCode","code","isNaN","JSON","stringify","String","fromCharCode","toUpperCase","lexer","prev","bodyLength","end","charCodeAt","_line","_col","readComment","readBlockString","readString","readNumber","readName","unexpectedCharacterMessage","col","firstCode","isFloat","readDigits","isNameStart","chunkStart","charCode","uniCharCode","invalidSequence","rawValue","b","c","d","char2hex","parse","options","parser","parseDocument","Parser","sourceObj","_lexer","_options","parseName","expectToken","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","type","parseTypeReference","defaultValue","expectOptionalToken","parseValueLiteral","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","block","values","any","_this2","parseObjectField","fields","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","_this$_options2","allowLegacySDLImplementsInterfaces","types","delimitedMany","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","startToken","_this$_options4","noLocation","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","delimiterKind","docCache","fragmentSourceMap","printFragmentWarnings","normalize","string","replace","trim","cacheKeyFromLoc","substring","processFragments","ast","seenKeys","Set","fragmentDefinition","fragmentName","sourceKey","sourceKeySet","console","warn","add","stripLoc","doc","workSet","endToken","cacheKey","parsed","allowLegacyFragmentVariables","literals","_i","arg","resetCaches","clear","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","extras","gql_1"],"mappings":"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","file":"js/chunk-da0c12be.029fac7a.js","sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-center\"\n}\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"spinner-border\",\n  role: \"status\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"visually-hidden\" }, \"Loading...\")\n], -1)\nconst _hoisted_4 = [\n  _hoisted_3\n]\nconst _hoisted_5 = {\n  key: 1,\n  class: \"row row-cols-1 row-cols-md-4 g-4\"\n}\nconst _hoisted_6 = { class: \"card h-100 border-secondary bg-light\" }\nconst _hoisted_7 = [\"href\"]\nconst _hoisted_8 = [\"src\", \"alt\"]\nconst _hoisted_9 = { class: \"card-body\" }\nconst _hoisted_10 = { class: \"card-footer\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (_ctx.loading)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _hoisted_4))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.memes, (meme) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: meme.id,\n              class: \"col\"\n            }, [\n              _createElementVNode(\"div\", _hoisted_6, [\n                _createElementVNode(\"a\", {\n                  href: meme.imageUrl,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\"\n                }, [\n                  _createElementVNode(\"img\", {\n                    src: meme.imageUrl,\n                    class: \"card-img-top\",\n                    alt: meme.keywords[0]\n                  }, null, 8, _hoisted_8)\n                ], 8, _hoisted_7),\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _createElementVNode(\"h4\", null, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(meme.keywords, (keyword, index) => {\n                      return (_openBlock(), _createElementBlock(\"span\", {\n                        key: index,\n                        class: \"badge bg-secondary m-1\"\n                      }, _toDisplayString(keyword), 1))\n                    }), 128))\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_10, _toDisplayString(meme.imageUrl), 1)\n              ])\n            ]))\n          }), 128))\n        ]))\n  ]))\n}","\nimport { useQuery, useResult } from '@vue/apollo-composable'\nimport { gql } from 'apollo-boost'\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n  setup() {\n    const { result, loading } = useQuery(gql`\n      query getMemes {\n        Memes {\n          id\n          imageUrl\n          keywords\n        }\n      }\n    `)\n\n    const memes = useResult(result, null, (data) => data.Memes)\n\n    return {\n      loading,\n      memes,\n    }\n  },\n})\n","import { render } from \"./Meme.vue?vue&type=template&id=56806ad4&ts=true\"\nimport script from \"./Meme.vue?vue&type=script&lang=ts\"\nexport * from \"./Meme.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/runner/work/neko-line-bot-web/neko-line-bot-web/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _nodeLocations, _nodeLocations2, _nodeLocations3;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message);\n    _this.name = 'GraphQLError';\n    _this.originalError = originalError !== null && originalError !== void 0 ? originalError : undefined; // Compute list of blame nodes.\n\n    _this.nodes = undefinedIfEmpty(Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined);\n    var nodeLocations = [];\n\n    for (var _i2 = 0, _ref3 = (_this$nodes = _this.nodes) !== null && _this$nodes !== void 0 ? _this$nodes : []; _i2 < _ref3.length; _i2++) {\n      var _this$nodes;\n\n      var _ref4 = _ref3[_i2];\n      var loc = _ref4.loc;\n\n      if (loc != null) {\n        nodeLocations.push(loc);\n      }\n    }\n\n    nodeLocations = undefinedIfEmpty(nodeLocations); // Compute locations in the source for the given nodes/positions.\n\n    _this.source = source !== null && source !== void 0 ? source : (_nodeLocations = nodeLocations) === null || _nodeLocations === void 0 ? void 0 : _nodeLocations[0].source;\n    _this.positions = positions !== null && positions !== void 0 ? positions : (_nodeLocations2 = nodeLocations) === null || _nodeLocations2 === void 0 ? void 0 : _nodeLocations2.map(function (loc) {\n      return loc.start;\n    });\n    _this.locations = positions && source ? positions.map(function (pos) {\n      return getLocation(source, pos);\n    }) : (_nodeLocations3 = nodeLocations) === null || _nodeLocations3 === void 0 ? void 0 : _nodeLocations3.map(function (loc) {\n      return getLocation(loc.source, loc.start);\n    });\n    _this.path = path !== null && path !== void 0 ? path : undefined;\n    var originalExtensions = originalError === null || originalError === void 0 ? void 0 : originalError.extensions;\n\n    if (extensions == null && isObjectLike(originalExtensions)) {\n      _this.extensions = _objectSpread({}, originalExtensions);\n    } else {\n      _this.extensions = extensions !== null && extensions !== void 0 ? extensions : {};\n    } // By being enumerable, JSON.stringify will include bellow properties in the resulting output.\n    // This ensures that the simplest possible GraphQL service adheres to the spec.\n\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      message: {\n        enumerable: true\n      },\n      locations: {\n        enumerable: _this.locations != null\n      },\n      path: {\n        enumerable: _this.path != null\n      },\n      extensions: {\n        enumerable: _this.extensions != null && Object.keys(_this.extensions).length > 0\n      },\n      name: {\n        enumerable: false\n      },\n      nodes: {\n        enumerable: false\n      },\n      source: {\n        enumerable: false\n      },\n      positions: {\n        enumerable: false\n      },\n      originalError: {\n        enumerable: false\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i4 = 0, _error$nodes2 = error.nodes; _i4 < _error$nodes2.length; _i4++) {\n      var node = _error$nodes2[_i4];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i6 = 0, _error$locations2 = error.locations; _i6 < _error$locations2.length; _i6++) {\n      var location = _error$locations2[_i6];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = prev.end;\n\n  while (pos < bodyLength) {\n    var code = body.charCodeAt(pos);\n    var _line = lexer.line;\n\n    var _col = 1 + pos - lexer.lineStart; // SourceCharacter\n\n\n    switch (code) {\n      case 0xfeff: // <BOM>\n\n      case 9: //   \\t\n\n      case 32: //  <space>\n\n      case 44:\n        //  ,\n        ++pos;\n        continue;\n\n      case 10:\n        //  \\n\n        ++pos;\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 13:\n        //  \\r\n        if (body.charCodeAt(pos + 1) === 10) {\n          pos += 2;\n        } else {\n          ++pos;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 33:\n        //  !\n        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);\n\n      case 35:\n        //  #\n        return readComment(source, pos, _line, _col, prev);\n\n      case 36:\n        //  $\n        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);\n\n      case 38:\n        //  &\n        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);\n\n      case 40:\n        //  (\n        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);\n\n      case 41:\n        //  )\n        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);\n\n      case 46:\n        //  .\n        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);\n        }\n\n        break;\n\n      case 58:\n        //  :\n        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);\n\n      case 61:\n        //  =\n        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);\n\n      case 64:\n        //  @\n        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);\n\n      case 91:\n        //  [\n        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);\n\n      case 93:\n        //  ]\n        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);\n\n      case 123:\n        // {\n        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);\n\n      case 124:\n        // |\n        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);\n\n      case 125:\n        // }\n        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);\n\n      case 34:\n        //  \"\n        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n          return readBlockString(source, pos, _line, _col, prev, lexer);\n        }\n\n        return readString(source, pos, _line, _col, prev);\n\n      case 45: //  -\n\n      case 48: //  0\n\n      case 49: //  1\n\n      case 50: //  2\n\n      case 51: //  3\n\n      case 52: //  4\n\n      case 53: //  5\n\n      case 54: //  6\n\n      case 55: //  7\n\n      case 56: //  8\n\n      case 57:\n        //  9\n        return readNumber(source, pos, code, _line, _col, prev);\n\n      case 65: //  A\n\n      case 66: //  B\n\n      case 67: //  C\n\n      case 68: //  D\n\n      case 69: //  E\n\n      case 70: //  F\n\n      case 71: //  G\n\n      case 72: //  H\n\n      case 73: //  I\n\n      case 74: //  J\n\n      case 75: //  K\n\n      case 76: //  L\n\n      case 77: //  M\n\n      case 78: //  N\n\n      case 79: //  O\n\n      case 80: //  P\n\n      case 81: //  Q\n\n      case 82: //  R\n\n      case 83: //  S\n\n      case 84: //  T\n\n      case 85: //  U\n\n      case 86: //  V\n\n      case 87: //  W\n\n      case 88: //  X\n\n      case 89: //  Y\n\n      case 90: //  Z\n\n      case 95: //  _\n\n      case 97: //  a\n\n      case 98: //  b\n\n      case 99: //  c\n\n      case 100: // d\n\n      case 101: // e\n\n      case 102: // f\n\n      case 103: // g\n\n      case 104: // h\n\n      case 105: // i\n\n      case 106: // j\n\n      case 107: // k\n\n      case 108: // l\n\n      case 109: // m\n\n      case 110: // n\n\n      case 111: // o\n\n      case 112: // p\n\n      case 113: // q\n\n      case 114: // r\n\n      case 115: // s\n\n      case 116: // t\n\n      case 117: // u\n\n      case 118: // v\n\n      case 119: // w\n\n      case 120: // x\n\n      case 121: // y\n\n      case 122:\n        // z\n        return readName(source, pos, _line, _col, prev);\n    }\n\n    throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n  }\n\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Source, isSource } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var _this$_options2;\n\n    if (!this.expectOptionalKeyword('implements')) {\n      return [];\n    }\n\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {\n      var types = []; // Optional leading ampersand\n\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || this.peek(TokenKind.NAME));\n\n      return types;\n    }\n\n    return this.delimitedMany(TokenKind.AMP, this.parseNamedType);\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n  ;\n\n  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n","import { __assign } from \"tslib\";\nimport { parse } from 'graphql';\nvar docCache = new Map();\nvar fragmentSourceMap = new Map();\nvar printFragmentWarnings = true;\nvar experimentalFragmentVariables = false;\nfunction normalize(string) {\n    return string.replace(/[\\s,]+/g, ' ').trim();\n}\nfunction cacheKeyFromLoc(loc) {\n    return normalize(loc.source.body.substring(loc.start, loc.end));\n}\nfunction processFragments(ast) {\n    var seenKeys = new Set();\n    var definitions = [];\n    ast.definitions.forEach(function (fragmentDefinition) {\n        if (fragmentDefinition.kind === 'FragmentDefinition') {\n            var fragmentName = fragmentDefinition.name.value;\n            var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n            var sourceKeySet = fragmentSourceMap.get(fragmentName);\n            if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n                if (printFragmentWarnings) {\n                    console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n                        + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n                        + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n                }\n            }\n            else if (!sourceKeySet) {\n                fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n            }\n            sourceKeySet.add(sourceKey);\n            if (!seenKeys.has(sourceKey)) {\n                seenKeys.add(sourceKey);\n                definitions.push(fragmentDefinition);\n            }\n        }\n        else {\n            definitions.push(fragmentDefinition);\n        }\n    });\n    return __assign(__assign({}, ast), { definitions: definitions });\n}\nfunction stripLoc(doc) {\n    var workSet = new Set(doc.definitions);\n    workSet.forEach(function (node) {\n        if (node.loc)\n            delete node.loc;\n        Object.keys(node).forEach(function (key) {\n            var value = node[key];\n            if (value && typeof value === 'object') {\n                workSet.add(value);\n            }\n        });\n    });\n    var loc = doc.loc;\n    if (loc) {\n        delete loc.startToken;\n        delete loc.endToken;\n    }\n    return doc;\n}\nfunction parseDocument(source) {\n    var cacheKey = normalize(source);\n    if (!docCache.has(cacheKey)) {\n        var parsed = parse(source, {\n            experimentalFragmentVariables: experimentalFragmentVariables,\n            allowLegacyFragmentVariables: experimentalFragmentVariables\n        });\n        if (!parsed || parsed.kind !== 'Document') {\n            throw new Error('Not a valid GraphQL document.');\n        }\n        docCache.set(cacheKey, stripLoc(processFragments(parsed)));\n    }\n    return docCache.get(cacheKey);\n}\nexport function gql(literals) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (typeof literals === 'string') {\n        literals = [literals];\n    }\n    var result = literals[0];\n    args.forEach(function (arg, i) {\n        if (arg && arg.kind === 'Document') {\n            result += arg.loc.source.body;\n        }\n        else {\n            result += arg;\n        }\n        result += literals[i + 1];\n    });\n    return parseDocument(result);\n}\nexport function resetCaches() {\n    docCache.clear();\n    fragmentSourceMap.clear();\n}\nexport function disableFragmentWarnings() {\n    printFragmentWarnings = false;\n}\nexport function enableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = true;\n}\nexport function disableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = false;\n}\nvar extras = {\n    gql: gql,\n    resetCaches: resetCaches,\n    disableFragmentWarnings: disableFragmentWarnings,\n    enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables: disableExperimentalFragmentVariables\n};\n(function (gql_1) {\n    gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;\n})(gql || (gql = {}));\ngql[\"default\"] = gql;\nexport default gql;\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}